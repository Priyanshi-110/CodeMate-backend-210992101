generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  firstName String
  lastName  String?
  emailId   String   @unique
  password  String
  createdAt DateTime @default(now())
  
  // ADDED: Role for differentiating users (e.g., Student, TA)
  role      String   @default("Student")

  profile   Profile?
}

model Profile {
  id              String   @id @default(cuid())
  profileImg      String
  experience      String
  githubProfile   String
  linkedinProfile String
  codingPlatform  String
  skills          String
  location        String
  achievements    String
  createdAt       DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model SessionRoom {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // ADDED: For the "Raise Hand" feature
  handRaised Boolean @default(false)

  // ADDED: Relation to store all code history for this room
  snippets CodeSnippet[]
}

// ADDED: New model for saving code history (Member 4's task)
model CodeSnippet {
  id        String   @id @default(cuid())
  code      String
  timestamp DateTime @default(now())

  // Relation to the SessionRoom
  room   SessionRoom @relation(fields: [roomId], references: [id])
  roomId String
}